# -*- coding: utf-8 -*-
"""signup_flask.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-bLUCNBaEzeXxPGYxw7RwyGlsVeQ564f

#step 1: Set Up Flask in Colab
"""

#!pip install flask flask-ngrok geopy timezonefinder pyngrok


"""# Step 1B: Flask Web Interface (Sign-Up and Unsubscribe)"""

from flask import Flask, request, render_template_string, redirect
import json
from geopy.geocoders import Nominatim
from timezonefinder import TimezoneFinder
import os
from sheet_handler import add_user_to_sheet, remove_user_from_sheet

app = Flask(__name__)
geolocator = Nominatim(user_agent="mcp_weather_signup")
tz_finder = TimezoneFinder()
USER_FILE = "users.json"

# File initialization
if not os.path.exists(USER_FILE):
    with open(USER_FILE, "w") as f:
        json.dump([], f)

def load_users():
    with open(USER_FILE, "r") as f:
        return json.load(f)

def save_users(users):
    with open(USER_FILE, "w") as f:
        json.dump(users, f, indent=2)

form_html = '''
<h2>üå§Ô∏è MCP Weather Bot Sign-Up</h2>
<form method="POST" action="/signup">
  Name: <input name="name"><br><br>
  Email: <input name="email"><br><br>
  City: <input name="city"><br><br>
  <button type="submit">Subscribe</button>
</form>

<h2>‚ùå Unsubscribe</h2>
<form method="POST" action="/unsubscribe">
  Email: <input name="email"><br><br>
  <button type="submit">Unsubscribe</button>
</form>
'''

@app.route("/")
def index():
    return render_template_string(form_html)

@app.route("/signup", methods=["POST"])
def signup():
    name = request.form["name"]
    email = request.form["email"]
    city = request.form["city"]

    location = geolocator.geocode(city)
    if not location:
        return "‚ùå City not found. Try again."

    lat, lon = location.latitude, location.longitude
    timezone = tz_finder.timezone_at(lng=lon, lat=lat)

    users = load_users()
    if any(u["email"] == email for u in users):
        return "‚ö†Ô∏è You're already subscribed."

    users.append({
        "name": name,
        "email": email,
        "location": f"{lat},{lon}",
        "city": city,
        "timezone": timezone
    })
    save_users(users)
    return f"‚úÖ Thanks {name}, you're subscribed for {city}!"

@app.route("/unsubscribe", methods=["POST"])
def unsubscribe():
    email = request.form["email"]
    users = load_users()
    users = [u for u in users if u["email"] != email]
    save_users(users)
    return f"‚úÖ You have been unsubscribed."

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
