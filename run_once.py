# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Kxs_sP4kaBEtkpo9qwmlDS_w0Q4eJJQ0
"""

import json
import requests
from datetime import datetime
import pytz

from weatherer import get_weather
from mailerer import send_email
from sheet_handler import connect_to_sheet

#USER_FILE = "users.json"

#def load_users():
#    with open(USER_FILE, "r") as f:
#        return json.load(f)

def load_users():
    sheet = connect_to_sheet()
    data = sheet.get_all_values()
    headers = data[0]
    users = []

    for row in data[1:]:
        if not any(row):  # skip blank rows
            continue
        user = dict(zip(headers, row))
        users.append({
            "name": user.get("name", "").strip(),
            "email": user.get("email", "").strip(),
            "city": user.get("city", "").strip(),
            "location": user.get("location", "").strip(),
            "timezone": user.get("timezone", "").strip()
        })

    return users

def is_near_7am(timezone_str):
    try:
        now = datetime.now(pytz.timezone(timezone_str))
        print(f"🕒 {timezone_str}: {now.strftime('%H:%M')}")
        return now.hour == 7 and now.minute < 5
        #return now.hour == 21 and now.minute <= 10  # e.g., between 7:00 and 7:05 AM
        #return True
    except Exception as e:
        print(f"⚠️ Invalid timezone '{timezone_str}': {e}")
        return False
        
def run_scheduler_once():
    print("⏰ Running weather mailer scheduler...")

    users = load_users()
    print(f"📋 Loaded {len(users)} users from sheet.")

    for user in users:
        email = user.get("email")
        city = user.get("city")
        location = user.get("location")
        timezone = user.get("timezone")

        if not all([email, location, timezone]):
            print(f"⚠️ Skipping incomplete user: {user}")
            continue

        try:
            if is_near_7am(timezone):
                print(f"📩 Sending weather to {email} ({city})")
                weather = get_weather(location)
                send_email(email, weather, city)
            else:
                print(f"⏳ Skipping {email} — not 7 AM in {timezone}")
        except Exception as e:
            print(f"❌ Error processing {email}: {e}")

if __name__ == "__main__":
    run_scheduler_once()
